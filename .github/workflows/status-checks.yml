name: Status Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  # Quick validation for fast feedback
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Validate Gradle wrapper
        run: ./gradlew wrapper --no-daemon
        
      - name: Check compilation
        run: ./gradlew compileJava compileTestJava --no-daemon --parallel

  # Build and test
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quick-validation

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon

      - name: Run unit tests
        run: ./gradlew test --no-daemon

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/

  # Code quality checks (from pr-checks.yml)
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For better analysis
          
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
            
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest --no-daemon
          
      - name: Run PMD
        run: ./gradlew pmdMain pmdTest --no-daemon
        
      - name: Run SpotBugs
        run: ./gradlew spotbugsMain spotbugsTest --no-daemon
        
      - name: Upload code quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            build/reports/checkstyle/
            build/reports/pmd/
            build/reports/spotbugs/

  # Basic security scan
  security-baseline:
    name: Security Baseline
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Docker build verification
  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-and-test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: oddiya:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Linting and formatting checks
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Check code formatting
        run: |
          chmod +x gradlew
          ./gradlew spotlessCheck --no-daemon

  # AWS Configuration validation
  aws-config-check:
    name: AWS Config Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: contains(github.event.head_commit.message, 'aws') || contains(github.event.head_commit.message, 'deploy')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Validate CloudFormation templates
        run: |
          if [ -d "cloudformation" ]; then
            for template in cloudformation/*.yaml cloudformation/*.yml; do
              if [ -f "$template" ]; then
                echo "Validating $template..."
                aws cloudformation validate-template --template-body file://$template --region ${{ env.AWS_REGION }} || true
              fi
            done
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        continue-on-error: true

  # Final status check
  status-check:
    name: Final Status
    runs-on: ubuntu-latest
    needs: [quick-validation, build-and-test, code-quality, security-baseline, docker-build-test, lint-and-format]
    if: always()
    
    steps:
      - name: Check status
        run: |
          if [ "${{ needs.quick-validation.result }}" != "success" ] || \
             [ "${{ needs.build-and-test.result }}" != "success" ]; then
            echo "Required checks failed"
            exit 1
          fi
          echo "All required checks passed"