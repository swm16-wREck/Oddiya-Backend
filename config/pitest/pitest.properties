# PITest Advanced Configuration for Oddiya
# This file contains advanced PITest settings for fine-tuning mutation testing

# ==========================================
# Target Configuration
# ==========================================

# Classes to target for mutation testing
targetClasses=com.oddiya.service.*,com.oddiya.controller.*,com.oddiya.repository.*

# Classes to exclude from mutation testing
excludedClasses=com.oddiya.**.*Config*,com.oddiya.**.*Configuration*,com.oddiya.OddiyaApplication,com.oddiya.entity.**.*,com.oddiya.dto.**.*,com.oddiya.exception.**.*,com.oddiya.**.*Test*,com.oddiya.config.**.*,**.*Builder,**.*Factory

# Test classes to exclude
excludedTestClasses=**.*IntegrationTest,**.*E2ETest,**.*SlowTest

# ==========================================
# Mutation Operators Configuration
# ==========================================

# Standard mutators for comprehensive testing
mutators=CONDITIONALS_BOUNDARY,INCREMENTS,INVERT_NEGS,MATH,NEGATE_CONDITIONALS,RETURN_VALS,VOID_METHOD_CALLS,NON_VOID_METHOD_CALLS,CONSTRUCTOR_CALLS,INLINE_CONSTS,REMOVE_CONDITIONALS

# Experimental mutators (enable with caution)
# mutators=EXPERIMENTAL_MEMBER_VARIABLE,EXPERIMENTAL_SWITCH,EXPERIMENTAL_BIG_INTEGER

# Custom mutator groups
# For development/debugging - lighter set
mutators.dev=CONDITIONALS_BOUNDARY,MATH,NEGATE_CONDITIONALS,RETURN_VALS

# For critical testing - comprehensive set
mutators.critical=ALL

# ==========================================
# Coverage and Quality Thresholds
# ==========================================

# Mutation testing thresholds
mutationThreshold=80
coverageThreshold=75
testStrengthThreshold=75

# Critical component thresholds (higher standards)
mutationThreshold.critical=90
coverageThreshold.critical=85
testStrengthThreshold.critical=85

# Fast testing thresholds (lower for development)
mutationThreshold.fast=60
coverageThreshold.fast=60
testStrengthThreshold.fast=60

# ==========================================
# Performance Configuration
# ==========================================

# Timeout settings (milliseconds)
timeoutConst=4000
timeoutFactor=1.25

# Thread configuration
threads=0  # Use all available processors

# Maximum mutations per class (0 = no limit)
maxMutationsPerClass=0

# Maximum surviving mutations per class
maxSurviving=0

# ==========================================
# Reporting Configuration
# ==========================================

# Output formats
outputFormats=HTML,XML,CSV

# Report directory structure
reportDir=build/reports/pitest

# Timestamped reports
timestampedReports=true

# Include launch classpath in reports
includelaunchclasspath=true

# Export line coverage data
exportLineCoverage=true

# ==========================================
# Advanced Features
# ==========================================

# Incremental analysis for faster subsequent runs
enableDefaultIncrementalAnalysis=true

# History locations for incremental analysis
historyInputLocation=build/pitest-history
historyOutputLocation=build/pitest-history

# Use classpath file for better performance
useClasspathFile=true

# Skip failing tests rather than fail entire run
skipFailingTests=true

# Detect inlined code
detectInlinedCode=true

# Feature flags
features=+FLOGCALL

# ==========================================
# Java 21 Specific Configuration
# ==========================================

# JVM arguments for Java 21 compatibility
jvmArgs=--add-opens java.base/java.lang=ALL-UNNAMED,--add-opens java.base/java.util=ALL-UNNAMED,--add-opens java.base/java.text=ALL-UNNAMED,--add-opens java.base/java.util.concurrent=ALL-UNNAMED,--add-opens java.base/java.io=ALL-UNNAMED,--add-opens java.base/java.net=ALL-UNNAMED

# ==========================================
# Test Framework Configuration
# ==========================================

# Test plugin (JUnit 5)
testPlugin=junit5

# JUnit 5 plugin version
junit5PluginVersion=1.2.1

# ==========================================
# Package-Specific Configuration
# ==========================================

# Service layer specific settings
targetClasses.service=com.oddiya.service.**.*
mutationThreshold.service=85
excludedClasses.service=com.oddiya.service.**.*Config*

# Controller layer specific settings
targetClasses.controller=com.oddiya.controller.**.*
mutationThreshold.controller=75
excludedClasses.controller=com.oddiya.controller.**.*Config*

# Repository layer specific settings
targetClasses.repository=com.oddiya.repository.**.*
mutationThreshold.repository=70
excludedClasses.repository=com.oddiya.repository.**.*Config*

# ==========================================
# Environment Specific Configuration
# ==========================================

# Development environment - faster execution
dev.maxMutationsPerClass=50
dev.timeoutConst=2000
dev.threads=2

# CI environment - comprehensive testing
ci.threads=0
ci.timeoutConst=6000
ci.timeoutFactor=1.5

# Production validation - strictest settings
prod.mutationThreshold=95
prod.coverageThreshold=90
prod.testStrengthThreshold=90

# ==========================================
# Exclusion Patterns
# ==========================================

# Method patterns to exclude
excludedMethods=*toString*,*hashCode*,*equals*,*get*,*set*,*builder*

# Line patterns to exclude (regex)
excludedPatterns=.*GENERATED.*,.*TODO.*,.*FIXME.*,.*@Generated.*

# File patterns to exclude
excludedFiles=**/*Config.java,**/*Configuration.java,**/*Application.java

# ==========================================
# Custom Mutation Testing Rules
# ==========================================

# Critical business logic classes requiring highest standards
critical.classes=com.oddiya.service.impl.AuthServiceImpl,com.oddiya.service.impl.UserServiceImpl,com.oddiya.service.impl.TravelPlanServiceImpl,com.oddiya.service.impl.PlaceServiceImpl,com.oddiya.service.impl.JwtServiceImpl

# Classes with relaxed thresholds due to framework dependencies
relaxed.classes=com.oddiya.controller.**.*,com.oddiya.config.**.*

# Classes requiring special attention
security.classes=com.oddiya.service.impl.AuthServiceImpl,com.oddiya.service.impl.JwtServiceImpl,com.oddiya.controller.AuthController