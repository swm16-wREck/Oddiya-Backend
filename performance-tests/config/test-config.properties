# Oddiya Performance Test Configuration

# Test Environment Configuration
test.environment=local
base.url.local=http://localhost:8080
base.url.staging=https://staging-api.oddiya.com
base.url.production=https://api.oddiya.com

# API Endpoints
api.version=/api/v1
auth.endpoint=/auth
users.endpoint=/users
places.endpoint=/places
travel.plans.endpoint=/travel-plans
file.upload.endpoint=/upload

# Performance Targets
response.time.target.auth=100
response.time.target.search=200
response.time.target.travel=300
response.time.target.upload=1000
response.time.target.ai=2000

# Load Test Configuration
load.test.users.min=10
load.test.users.max=100
load.test.ramp.time=120
load.test.duration=1800

# Stress Test Configuration
stress.test.users.level1=100
stress.test.users.level2=500
stress.test.users.level3=1000
stress.test.ramp.time=300
stress.test.duration=900

# Spike Test Configuration
spike.test.users.normal=10
spike.test.users.spike=500
spike.test.spike.duration=60
spike.test.total.duration=900

# Soak Test Configuration
soak.test.users=50
soak.test.ramp.time=300
soak.test.duration=28800

# Database Configuration
db.connection.pool.max=20
db.query.timeout=30000
db.connection.timeout=5000

# JVM Configuration
jvm.heap.min=512m
jvm.heap.max=2g
jvm.gc.algorithm=G1GC

# Monitoring Configuration
monitoring.interval=5
monitoring.duration=3600
monitoring.cpu.threshold=80
monitoring.memory.threshold=85
monitoring.response.time.threshold=200

# Test Data Configuration
test.users.count=1000
test.places.count=500
test.travel.plans.count=200

# Report Configuration
report.format=html,csv
report.directory=results/reports
report.include.graphs=true
report.include.raw.data=false

# Error Thresholds
error.rate.threshold=1.0
error.rate.critical=5.0
response.time.95th.percentile=300
response.time.99th.percentile=500

# AWS Configuration (for production tests)
aws.region=ap-northeast-2
aws.cloudwatch.namespace=Oddiya/Performance
aws.s3.bucket=oddiya-performance-reports

# Security Configuration
auth.token.expiry=3600
auth.refresh.token.expiry=86400
test.user.credentials.file=config/test-users.csv

# Rate Limiting Configuration
rate.limit.auth=10
rate.limit.search=30
rate.limit.upload=5
rate.limit.ai=3

# Circuit Breaker Configuration
circuit.breaker.threshold=50
circuit.breaker.timeout=30000
circuit.breaker.reset.timeout=60000