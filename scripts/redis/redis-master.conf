# Redis Master Configuration
# Agent 2 - Redis Configuration Engineer
# Optimized for production workloads with security and performance

################################## NETWORK #####################################

# Accept connections on all interfaces, security controlled by security groups
bind 0.0.0.0

# Protect mode - require AUTH when no bind is specified or bind is not localhost
protected-mode yes

# Accept connections on the specified port, default is 6379
port 6379

# TCP listen() backlog
tcp-backlog 511

# Unix socket configuration (disabled by default)
# unixsocket /tmp/redis.sock
# unixsocketperm 700

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0

# TCP keepalive
tcp-keepalive 300

################################# TLS/SSL ######################################

# By default, TLS/SSL is disabled. Uncomment these lines to enable:
# port 0
# tls-port 6380
# tls-cert-file redis.crt
# tls-key-file redis.key
# tls-dh-params-file redis.dh
# tls-ca-cert-file ca.crt
# tls-protocols "TLSv1.2 TLSv1.3"

################################# GENERAL #####################################

# By default Redis does not run as a daemon
daemonize no

# Set the number of databases
databases 16

# Always show a logo when starting
always-show-logo no

################################ SNAPSHOTTING  ################################

# Save the DB to disk
# save <seconds> <changes>
# Will save the DB if both the given number of seconds and the given
# number of write operations against the DB occurred

save 900 1      # Save after 900 seconds if at least 1 key changed
save 300 10     # Save after 300 seconds if at least 10 keys changed
save 60 10000   # Save after 60 seconds if at least 10000 keys changed

# Stop writes if the background save fails
stop-writes-on-bgsave-error yes

# Compress string objects using LZF when dump .rdb databases
rdbcompression yes

# Checksum the RDB file
rdbchecksum yes

# The filename where to dump the DB
dbfilename dump.rdb

# Remove RDB files used by replication in instances without persistence
rdb-del-sync-files no

# The working directory
dir /var/lib/redis

################################# REPLICATION #################################

# Master-Replica replication. Use replicaof to make a Redis instance a copy of
# another Redis server. Note: the configuration is also needed on the master.

# masterauth <master-password>
# If the master is password protected it is possible to tell the replica to
# authenticate before starting the replication synchronization process

# When a replica loses its connection with the master, or when the replication
# is still in progress, the replica can act in two different ways:
replica-serve-stale-data yes

# You can configure a replica instance to accept writes or not
replica-read-only yes

# Replication SYNC strategy: disk or socket
repl-diskless-sync no

# When diskless replication is used, the master waits a configurable amount
# of time (in seconds) before starting the transfer
repl-diskless-sync-delay 5

# Replicas send PINGs to server in a predefined interval
repl-ping-replica-period 10

# Limit the maximum transmission rate of replication synchronization
# repl-limit-transfer-period 1000

# Set the replication timeout
repl-timeout 60

# Disable TCP_NODELAY on the replica socket after SYNC
repl-disable-tcp-nodelay no

# Set the replication backlog size
repl-backlog-size 1mb

# After a master has no longer connected replicas for some time, the backlog
# will be freed
repl-backlog-ttl 3600

# The replica priority is an integer number published by Redis in the INFO output
replica-priority 100

# By default, Redis Sentinel includes all replicas in its reports
replica-announce-ip ""
replica-announce-port 0

# It is possible for a master to stop accepting writes if there are less than
# N replicas connected, having a lag less or equal than M seconds
min-replicas-to-write 1
min-replicas-max-lag 10

############################### KEYS TRACKING ###############################

# Redis can notify Pub/Sub clients about events happening in the key space
# notify-keyspace-events ""

# For example, to enable list and generic events:
notify-keyspace-events "Elg"

################################## SECURITY ###################################

# WARNING: since Redis is pretty fast, an outside user can try up to
# 1 million passwords per second against a modern box. This means that you
# should use very strong passwords, otherwise they will be very easy to break.

# Authentication password
requirepass CHANGE_ME_REDIS_PASSWORD

# Master authentication password for replication
masterauth CHANGE_ME_REDIS_PASSWORD

# Command renaming for security
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command EVAL ""
rename-command DEBUG ""
rename-command CONFIG "CONFIG_3c4e5f6a7b8c9d0e"
rename-command SHUTDOWN "SHUTDOWN_9f8e7d6c5b4a3210"

# ACL configuration (Redis 6.0+)
# User default rules
user default on >CHANGE_ME_REDIS_PASSWORD ~* &* -@dangerous +@all

################################### CLIENTS ####################################

# Maximum number of connected clients at the same time
maxclients 10000

############################## MEMORY MANAGEMENT #############################

# Memory usage limit. When the memory limit is reached Redis will try to remove
# keys according to the eviction policy selected
maxmemory 3gb

# How Redis will select what to remove when maxmemory is reached
maxmemory-policy allkeys-lru

# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated
# algorithms, so you can tune it for speed or accuracy
maxmemory-samples 5

# Starting from Redis 5, by default a replica will ignore its maxmemory setting
replica-ignore-maxmemory yes

############################# LAZY FREEING ####################################

# Lazy freeing of memory in a different thread
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

############################ KERNEL TRANSPARENT HUGEPAGE ######################

disable-thp yes

################################ THREADED I/O #################################

# So for instance if you have a four cores box, try to use 2 or 3 I/O threads
io-threads 2
io-threads-do-reads yes

############################ KERNEL OOM CONTROL ##############################

oom-score-adj no

###################### KERNEL NUMA POLICY #######################

# auto-numa-policy no

################################## SLOW LOG ###################################

# The Redis slow queries log is a system to log queries that exceeded a specified
# execution time
slowlog-log-slower-than 10000

# Maximum length of the slow log
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

# The Redis latency monitoring subsystem samples different operations at runtime
latency-monitor-threshold 100

############################# EVENT NOTIFICATION ##############################

# Redis can notify Pub/Sub clients about events happening in the key space
notify-keyspace-events "Ex"

############################### ADVANCED CONFIG #############################

# Hashes are encoded using a memory efficient data structure when they have a
# small number of entries
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Lists are also encoded in a special way to save a lot of space
list-max-ziplist-size -2

# Lists may also be compressed
list-compress-depth 0

# Sets have a special encoding in just one case: when a set is composed
# of just strings that happen to be integers in radix 10 in the range
# of 64 bit signed integers
set-max-intset-entries 512

# Similarly to hashes and lists, sorted sets are also specially encoded in
# order to save a lot of space
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation bytes limit
hll-sparse-max-bytes 3000

# Streams macro node max size / items
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in
# order to help rehashing the main Redis hash table
activerehashing yes

# The client output buffer limits can be used to force disconnection of clients
# that are not reading data from the server fast enough
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffers accumulate new commands
client-query-buffer-limit 1gb

# In the Redis protocol, bulk requests, that are, elements representing single
# strings, are normally limited ot 512 mb
proto-max-bulk-len 512mb

# Redis calls an internal function to perform many background tasks, like
# closing connections of clients in timeout, purging expired keys that are
# never requested, and so forth
hz 10

# Enable dynamic HZ
dynamic-hz yes

# When a child rewrites the AOF file, if the following option is enabled
# the file will be fsync-ed every 32 MB of data generated
aof-rewrite-incremental-fsync yes

# When redis saves RDB file, if the following option is enabled
# the file will be fsync-ed every 32 MB of data generated
rdb-save-incremental-fsync yes

# Redis LFU eviction (see maxmemory setting) can be tuned
lfu-log-factor 10
lfu-decay-time 1

########################### ACTIVE DEFRAGMENTATION #######################

# Enabled active defragmentation
activedefrag no

# Minimum amount of fragmentation waste to start active defrag
active-defrag-ignore-bytes 100mb

# Minimum percentage of fragmentation to start active defrag
active-defrag-threshold-lower 10

# Maximum percentage of fragmentation at which we use maximum effort
active-defrag-threshold-upper 100

# Minimal effort for defrag in CPU percentage
active-defrag-cycle-min 5

# Maximal effort for defrag in CPU percentage
active-defrag-cycle-max 75

# Maximum number of set/hash/zset/list fields that will be processed from
# the main dictionary scan
active-defrag-max-scan-fields 1000

#################################### JEMALLOC ################################

# Jemalloc background thread for purging will be enabled by default
jemalloc-bg-thread yes

############################ PERFORMANCE MONITORING ######################

# Enable tracking
# tracking-table-max-keys 1000000

# For debugging and performance monitoring
# slowlog-log-slower-than 10000
# slowlog-max-len 128
# latency-monitor-threshold 100

############################ MODULES #######################################

# Load modules at startup
# loadmodule /path/to/my_module.so
# loadmodule /path/to/other_module.so

############################ REDIS CLUSTER #############################

# Normal Redis instances can't be part of a Redis Cluster
# cluster-enabled no

# Every cluster node must have a cluster configuration file
# cluster-config-file nodes-6379.conf

# Cluster node timeout
# cluster-node-timeout 15000

# A replica of a failing master will avoid to start a failover
# cluster-replica-validity-factor 10

# Minimum number of replicas a master will remain connected with
# cluster-migration-barrier 1

# By default Redis Cluster nodes stop accepting queries if they detect there
# is at least an hash slot uncovered
# cluster-require-full-coverage yes

# In order to setup your cluster make sure to read the documentation
# available at http://redis.io web site

############################ LOGGING ######################################

# Specify the log level
loglevel notice

# Specify the log file name. Also the empty string can be used to force
# Redis to log on the standard output
logfile /var/log/redis/redis-server.log

# To enable logging to the system logger, just set 'syslog-enabled' to yes
syslog-enabled yes

# Specify the syslog identity
syslog-ident redis

# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7
syslog-facility local0

################################ APPEND ONLY FILE ###############################

# By default Redis asynchronously dumps the dataset on disk
appendonly yes

# The name of the append only file
appendfilename "appendonly.aof"

# The fsync() call tells the Operating System to actually write data on disk
# instead of waiting for more data in the output buffer
appendfsync everysec

# When the AOF fsync policy is set to always or everysec, and a background
# saving process (a background save or AOF log background rewriting) is
# performing a lot of I/O against the disk, in some Linux configurations
# Redis may block too long on the fsync() call
no-appendfsync-on-rewrite no

# Automatic rewrite of the append only file
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# An AOF file may be found to be truncated at the end during startup process
aof-load-truncated yes

# When rewriting the AOF file, Redis is able to use an RDB preamble in the
# AOF file for faster rewrites and recoveries
aof-use-rdb-preamble yes